{"version":3,"sources":["components/Navbar.jsx","components/PokemonCardDetail.jsx","components/PokemonTeamAccordion.jsx","pages/Home.jsx","App.js","index.js"],"names":["Navbar","props","addCard","AppBar","position","color","Toolbar","Container","Typography","variant","Box","right","top","Fab","aria-label","onClick","PokemonCardDetail","cardId","handleAdd","pokedata","handleDelete","disabledAddButton","length","useState","state","setstate","pokerawdata","setPokerawdata","AccordionDetails","FormControl","component","fullWidth","onSubmit","e","preventDefault","Axios","get","then","res","data","catch","InputLabel","Input","endAdornment","InputAdornment","IconButton","type","onChange","target","value","types","map","Button","name","Divider","disabled","useStyles","makeStyles","theme","avatarWrapper","display","margin","spacing","avatar","boxShadow","backgroundColor","PokemonTeamAccordion","classes","setPokedata","mt","Accordion","AccordionSummary","expandIcon","className","poke","Avatar","alt","src","pictureUrl","id","uuid","newPokedata","Home","cards","setCard","newCards","filter","card","cardList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abd35064.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst Navbar = (props) => {\r\n  const { addCard } = props;\r\n  // const handleAdd = (e) => {\r\n  //   e.preventDefault();\r\n  //   addPokemon;\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"transparent\">\r\n        <Toolbar>\r\n          <Container>\r\n            <Typography variant=\"h5\">Poke Dream Team</Typography>\r\n            <Box position=\"absolute\" right=\"10%\" top=\"5%\">\r\n              <Fab color=\"primary\" aria-label=\"add\">\r\n                <AddIcon onClick={addCard} />\r\n              </Fab>\r\n            </Box>\r\n          </Container>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AccordionDetails,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Axios from \"axios\";\r\n\r\nconst PokemonCardDetail = ({ cardId, handleAdd, pokedata, handleDelete }) => {\r\n  const disabledAddButton = pokedata.length > 5 ? true : false;\r\n  const [state, setstate] = useState(\"\");\r\n  const [pokerawdata, setPokerawdata] = useState(0);\r\n  const handleChange = (e) => {\r\n    setstate(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    Axios.get(`https://pokeapi.co/api/v2/pokemon/${state}`)\r\n      .then((res) => setPokerawdata(res.data))\r\n      .catch(() => setPokerawdata(0));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AccordionDetails>\r\n        <FormControl component=\"form\" fullWidth onSubmit={handleSubmit}>\r\n          <InputLabel>Enter your pokemon here!</InputLabel>\r\n          <Input\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton type=\"submit\">\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            onChange={handleChange}\r\n            value={state}\r\n          ></Input>\r\n        </FormControl>\r\n      </AccordionDetails>\r\n      <AccordionDetails>\r\n        {pokerawdata === 0 ? (\r\n          <Typography>There's no pokemon registered with that name</Typography>\r\n        ) : (\r\n          pokerawdata.types.map((type) => <Button>{type.type.name}</Button>)\r\n        )}\r\n      </AccordionDetails>\r\n      <Divider />\r\n      <Button\r\n        onClick={() => {\r\n          handleDelete(cardId);\r\n        }}\r\n        // disabled={disabledDeleteButton}\r\n      >\r\n        Delete Team\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          handleAdd(pokerawdata);\r\n          setstate(\"\");\r\n        }}\r\n        disabled={disabledAddButton}\r\n      >\r\n        Add Pokemon\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCardDetail;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  Avatar,\r\n  Box,\r\n  CardMedia,\r\n  Container,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport PokemonCardDetail from \"./PokemonCardDetail\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatarWrapper: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    boxShadow: \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst PokemonTeamAccordion = ({ cardId, handleDelete }) => {\r\n  const classes = useStyles();\r\n\r\n  const [pokedata, setPokedata] = useState([]);\r\n\r\n  const handleAdd = (pokerawdata) => {\r\n    let name = pokerawdata.name;\r\n    let types = pokerawdata.types.map((type) => {\r\n      return type.type.name;\r\n    });\r\n    let id = uuid();\r\n    let pictureUrl = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokerawdata.id}.png`;\r\n    let newPokedata = [...pokedata, { id, name, types, pictureUrl }];\r\n    setPokedata(newPokedata);\r\n  };\r\n\r\n  // const handleDelete = (id) => {\r\n  //   const\r\n  // }\r\n\r\n  const typeColor = {\r\n    normal: \"#BCBCAE\",\r\n    poison: \"#AA5DA1\",\r\n    psychic: \"#FA65B5\",\r\n    grass: \"#8DD850\",\r\n    ground: \"#E7C758\",\r\n    ice: \"#96F1FF\",\r\n    fire: \"#FA5643\",\r\n    rock: \"#CDBD72\",\r\n    dragon: \"#8975FF\",\r\n    water: \"#56AEFF\",\r\n    bug: \"#C3D21F\",\r\n    dark: \"#8E6956\",\r\n    fighting: \"#A85644\",\r\n    ghost: \"#7975D7\",\r\n    steel: \"#C4C2DA\",\r\n    flying: \"#79A4FF\",\r\n    electric: \"#FDE53C\",\r\n    fairy: \"#FAADFF\",\r\n  };\r\n\r\n  // const chipStyle = {\r\n  //   background: `${type.type.name}`,\r\n  //   height: 48,\r\n  //   boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n  // };\r\n\r\n  return (\r\n    <Container key={cardId}>\r\n      <Box mt={3}>\r\n        <Accordion>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <div className={classes.avatarWrapper}>\r\n              {pokedata.length ? (\r\n                pokedata.map((poke) => {\r\n                  return (\r\n                    <Avatar\r\n                      alt={poke.name}\r\n                      src={poke.pictureUrl}\r\n                      className={classes.avatar}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <Avatar\r\n                  alt=\"no pokemon\"\r\n                  src=\"https://img.icons8.com/ios-glyphs/60/000000/question-mark.png\"\r\n                  className={classes.avatar}\r\n                />\r\n              )}\r\n            </div>\r\n          </AccordionSummary>\r\n          <PokemonCardDetail\r\n            cardId={cardId}\r\n            handleAdd={handleAdd}\r\n            handleDelete={handleDelete}\r\n            pokedata={pokedata}\r\n          />\r\n        </Accordion>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PokemonTeamAccordion;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PokemonTeamAccordion from \"../components/PokemonTeamAccordion\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Home = () => {\r\n  const [cards, setCard] = useState([]);\r\n\r\n  const addCard = () => {\r\n    const card = { id: uuid() };\r\n    let newCards = [...cards, card];\r\n    setCard(newCards);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    const newCards = cards.filter((card) => {\r\n      return card.id !== id;\r\n    });\r\n    setCard({ newCards });\r\n  };\r\n\r\n  const cardList = cards.length ? (\r\n    cards.map((card) => {\r\n      return (\r\n        <PokemonTeamAccordion\r\n          cardId={card.id}\r\n          key={card.id}\r\n          handleDelete={handleDelete}\r\n        />\r\n      );\r\n    })\r\n  ) : (\r\n    <Typography variant=\"h3\">The team is empty</Typography>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Navbar addCard={addCard} />\r\n      {cardList}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}